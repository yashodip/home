{"version":3,"sources":["editable-stuff/resume.pdf","components/MainBody.jsx","components/AboutMe.jsx","components/ProjectCard.jsx","components/Project.jsx","components/Footer.jsx","components/Skills.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainBody","icons","Configs","useState","devIntro","devInfo","devDesc","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","id","className","map","key","target","rel","href","url","aria-label","image","split","onMouseOver","onMouseOut","role","AboutMe","heading","aboutDev","moreInfo","hobbies","instaProfilePic","setInstaProfilePic","showInstaProfilePic","showInsta","setShowInsta","Pdf","resumeURL","useEffect","handleRequest","e","axios","get","instaLink","instaUsername","instaQuerry","then","response","graphql","user","profile_pic_url_hd","catch","error","console","message","finally","src","alt","Language","value","setData","array","total_count","index","push","language","Math","trunc","ProjectCard","updated_at","setUpdatedAt","handleUpdatetime","date","Date","pushed_at","diff","getTime","hours","toString","day","getDate","monthIndex","getMonth","year","getFullYear","name","description","svn_url","stargazers_count","languages_url","Project","projectsArray","setProjectsArray","projectsLength","useCallback","gitHubLink","gitHubUsername","gitHubQuerry","slice","project","Footer","backgroundColor","bgStyle","style","divStyle","display","flexDirection","alignItems","Skills","Tabs","defaultActiveKey","justify","variant","transition","fontSize","Tab","eventKey","title","ProgressBar","now","width","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abc82d21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.afcd7960.pdf\";","import React, { useState } from \"react\";\r\nimport Typist from \"react-typist\";\r\nimport \"../App\";\r\nimport Configs from \"../editable-stuff/configurations.json\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nconst MainBody = () => {\r\n  const icons = Configs.icons;\r\n\r\n  // const [backgroundType, setBackgroundType] = useState(Configs.backgroundType);\r\n  const [devInfo] = useState(Configs.devIntro);\r\n  const [devDesc] = useState(Configs.devDesc);\r\n  const [hoverstatus, setHoverstatus] = useState([\r\n    \"socialicons\",\r\n    \"socialicons\",\r\n    \"socialicons\",\r\n    \"socialicons\"\r\n  ]);\r\n\r\n  const toggleHover = data => {\r\n    const newhoverStatus = [...hoverstatus];\r\n\r\n    if (data.event === \"enter\") {\r\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\r\n      return setHoverstatus(newhoverStatus);\r\n    } else if (data.event === \"leave\") {\r\n      newhoverStatus[data.icon.id] = \"socialicons\";\r\n      return setHoverstatus(newhoverStatus);\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div >\r\n      <div\r\n        id=\"divmainbody\"\r\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\r\n      >\r\n         <div id=\"stars\"></div>\r\n        <div className=\"container container-fluid text-center \">\r\n          <h1 className=\"display-1\">{devInfo}</h1>\r\n          <Typist className=\"lead\"> {devDesc}</Typist>\r\n          <div className=\"p-5\">\r\n            {icons.map(icon => (\r\n              <a\r\n                key={icon.id}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={icon.url}\r\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\r\n              >\r\n                <i\r\n                  className={`fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`}\r\n                  onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\r\n                  onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\r\n                />\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <a\r\n            className=\"btn btn-outline-light btn-lg\"\r\n            href=\"#aboutme\"\r\n            role=\"button\"\r\n            aria-label=\"Learn more about me\"\r\n          >\r\n            More about me\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainBody;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Configs from \"../editable-stuff/configurations.json\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport Pdf from \"../editable-stuff/resume.pdf\";\r\n\r\nconst AboutMe = () => {\r\n  const [heading] = useState(\"About me\");\r\n  const [aboutDev] = useState(Configs.aboutDev);\r\n  const [moreInfo] = useState(Configs.moreInfo);\r\n  const [hobbies] = useState(Configs.hobbies);\r\n  const [instaProfilePic, setInstaProfilePic] = useState(\"\");\r\n  const [showInsta, setShowInsta] = useState(Configs.showInstaProfilePic);\r\n  const [resumeURL] = useState(Pdf);\r\n\r\n  useEffect(() => {\r\n    if (showInsta) {\r\n      handleRequest();\r\n    }\r\n  }, [showInsta]);\r\n\r\n  const handleRequest = e => {\r\n    axios\r\n      .get(Configs.instaLink + Configs.instaUsername + Configs.instaQuerry)\r\n      .then(response => {\r\n        // handle success\r\n        // console.log(response.data.graphql);\r\n        return setInstaProfilePic(\r\n          response.data.graphql.user.profile_pic_url_hd\r\n        );\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        setShowInsta(false);\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\r\n      <div className=\"container container-fluid p-5\">\r\n        <div className=\"row\">\r\n          {showInsta && (\r\n            <div className=\"col-5 d-none d-lg-block align-self-center\">\r\n              <img\r\n                className=\"border border-secondary rounded-circle\"\r\n                src={instaProfilePic}\r\n                alt=\"profilepicture\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={`col-lg-${showInsta ? \"7\" : \"12\"}`}>\r\n            <h1 className=\"display-4 mb-5 text-center\">{heading}</h1>\r\n            <p className=\"lead text-justify\">{aboutDev}</p>\r\n            <p className=\"lead text-justify\">{moreInfo}</p>\r\n            <p className=\"lead text-justify\">{hobbies}</p>\r\n            {resumeURL && (\r\n              <p className=\"lead text-center\">\r\n                <a\r\n                  className=\"btn btn-outline-dark btn-lg\"\r\n                  href={Pdf}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\"\r\n                  role=\"button\"\r\n                  aria-label=\"Resume/CV\"\r\n                >\r\n                  Resume\r\n                </a>\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nconst ProjectCard = ({ value }) => {\r\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\r\n\r\n  useEffect(() => {\r\n    handleUpdatetime();\r\n  }, []);\r\n\r\n  const handleUpdatetime = () => {\r\n    const date = new Date(value.pushed_at);\r\n    const nowdate = new Date();\r\n    const diff = nowdate.getTime() - date.getTime();\r\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\r\n\r\n    if (hours < 24) {\r\n      return setUpdatedAt(`${hours.toString()} hours ago`);\r\n    } else {\r\n      const monthNames = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ];\r\n      const day = date.getDate();\r\n      const monthIndex = date.getMonth();\r\n      const year = date.getFullYear();\r\n\r\n      return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\r\n    }\r\n  };\r\n\r\n  const { name, description, svn_url, stargazers_count, languages_url } = value;\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\r\n        {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{name} </h5>\r\n          <p className=\"card-text\">{description} </p>\r\n          <a\r\n            href={`${svn_url}/archive/master.zip`}\r\n            className=\"btn btn-outline-secondary mr-3\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Clone Project\r\n          </a>\r\n          <a\r\n            href={svn_url}\r\n            target=\" _blank\"\r\n            className=\"btn btn-outline-secondary\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Repo\r\n          </a>\r\n          <hr />\r\n          <Language value={languages_url}></Language>\r\n          <p className=\"card-text\">\r\n            <span className=\"text-dark card-link mr-4\">\r\n              <i className=\"fab fa-github\" /> Stars{\" \"}\r\n              <span className=\"badge badge-dark\">{stargazers_count}</span>\r\n            </span>\r\n            <small className=\"text-muted\">Updated {updated_at}</small>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Language = ({ value }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, []);\r\n\r\n  const handleRequest = () => {\r\n    axios\r\n      .get(value)\r\n      .then((response) => {\r\n        // handle success\r\n        // console.log(response.data);\r\n        return setData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const array = [];\r\n  let total_count = 0;\r\n  for (let index in data) {\r\n    array.push(index);\r\n    total_count += data[index];\r\n    // console.log(index, this.state.data[index]);\r\n  }\r\n  // console.log(\"array contains \", array, this.state.data[array[0]]);\r\n\r\n  return (\r\n    <div className=\"pb-3\">\r\n      Languages:{\" \"}\r\n      {array.map((language) => (\r\n        <p key={language} className=\"badge badge-light card-link\">\r\n          {language}: {Math.trunc((data[language] / total_count) * 1000) / 10} %\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../App.css\";\r\nimport Configs from \"../editable-stuff/configurations.json\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nconst Project = () => {\r\n  const [heading] = useState(\"Recent Projects\");\r\n  const [projectsArray, setProjectsArray] = useState([]);\r\n  const [projectsLength] = useState(Configs.projectsLength);\r\n\r\n  const handleRequest = useCallback(\r\n    e => {\r\n      axios\r\n        .get(Configs.gitHubLink + Configs.gitHubUsername + Configs.gitHubQuerry)\r\n        .then(response => {\r\n          // handle success\r\n          // console.log(response.data.slice(0, 4));\r\n          return setProjectsArray(response.data.slice(0, projectsLength));\r\n        })\r\n        .catch(error => {\r\n          // handle error\r\n          return console.error(error.message);\r\n        })\r\n        .finally(() => {\r\n          // always executed\r\n        });\r\n    },\r\n    [projectsLength]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  return (\r\n    <div id=\"projects\" className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\r\n      <div className=\"container container-fluid p-5\">\r\n        <h1 className=\"display-4 pb-5\">{heading}</h1>\r\n        <div className=\"row\">\r\n          {projectsArray.map(project => (\r\n            <ProjectCard key={project.id} id={project.id} value={project} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nconst Footer = () => {\r\n  const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\r\n\r\n  return (\r\n    <footer style={bgStyle} className=\"mt-auto py-3 text-center\">\r\n      {/* <strong> &copy; 2019 </strong>*/}\r\n      <i className=\"fas fa-code\"></i> with <i className=\"fas fa-heart\"></i> by{\" \"}\r\n      <a\r\n        className=\"badge badge-dark\"\r\n        rel=\"noopener\"\r\n        href=\"https://github.com/yashodip\"\r\n        aria-label=\"My GitHub\"\r\n      >\r\n        Yashodip Deshmukh\r\n      </a>{\" \"}\r\n      using <i className=\"fab fa-react\"></i>\r\n      <p>\r\n        <small className=\"text-muted\">\r\n          {\" \"}\r\n\r\n        </small>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect, Profiler } from \"react\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nconst divStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n};\r\nconst Skills = () => {\r\n    return (\r\n        <div id=\"skills\" className=\"jumbotron jumbotron-fluid m-0\" >\r\n            <div className=\"container container-fluid\">\r\n\r\n                {/* <div className=\"col-5 d-none d-lg-inline align-self-center\">\r\n            </div> */}\r\n                <div className=\"d-inline align-self-center\">\r\n                    <h1 className=\"display-4 pb-5 text-center\">Skills</h1>\r\n\r\n                    <Tabs defaultActiveKey=\"home\" justify variant=\"tabs\" transition={false} id=\"skills-tabs\" style={{ backgroundColor: '#f7f7f7', fontSize: '1.25rem' }}>\r\n                        <Tab eventKey=\"home\" title=\"Hard Skills\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <br />\r\n                                    <p className=\"lead\">JavaScript (ES6)\r\n                  <ProgressBar now={87} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n                                    <p className=\"lead\">Data Structures and Algorithms\r\n                <ProgressBar now={60} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n                                    <p className=\"lead\">PHP\r\n                <ProgressBar now={75} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n\r\n                                    <p className=\"lead\">Windows Server Administration (2012 R2, 2016)\r\n                  <ProgressBar now={80} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n                                    <p className=\"lead\">JavaScript Libraries (Chart.js)\r\n                  <ProgressBar now={60} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <br />\r\n                                    <p className=\"lead\">HTML5/CSS3\r\n                <ProgressBar now={85} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n                                    <p className=\"lead\">React\r\n                <ProgressBar now={50} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n                                    <p className=\"lead\">jQuery and its plugins (DataTables, Cycle, SimpleLightbox, etc)\r\n                <ProgressBar now={90} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n\r\n                                    <p className=\"lead\">SQL Server Database Administration\r\n                  <ProgressBar now={70} style={{ width: '490px', backgroundColor: 'white' }} />\r\n                                    </p>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"soft\" title=\"Soft Skills\">\r\n                            <div className=\"col d-lg-inline align-self-center\">\r\n                                <br />\r\n                                <div className=\"row\" style={divStyle}>\r\n                                    <div className=\"col text-center\">\r\n                                        <p className=\"lead text-center\">Collaboration</p>\r\n                                        <img src=\"https://img.icons8.com/ios/75/000000/collaboration-female-male.png\" />\r\n                                    </div>\r\n                                    <div className=\"col text-center\">\r\n                                        <p className=\"lead text-center\">Problem Solving</p>\r\n                                        <img src=\"https://img.icons8.com/ios/75/000000/critical-thinking.png\" />\r\n                                    </div>\r\n                                    <div className=\"col text-center\">\r\n                                        <p className=\"lead text-center\">Positivity</p>\r\n                                        <img src=\"https://img.icons8.com/ios/75/000000/happy-cloud.png\" />\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"row\" style={divStyle}>\r\n                                    <div className=\"col text-center\">\r\n                                        <p className=\"lead text-center\">Goal Setting</p>\r\n                                        <img src=\"https://img.icons8.com/ios/75/000000/goal.png\" />\r\n                                    </div>\r\n                                    <div className=\"col text-center\">\r\n                                        <p className=\"lead text-center\">Organization</p>\r\n                                        <img src=\"https://img.icons8.com/ios/75/000000/to-do.png\" />\r\n                                    </div>\r\n                                    <div className=\"col text-center\">\r\n                                        <p className=\"lead text-center\">Empathy</p>\r\n                                        <img src=\"https://img.icons8.com/ios/75/000000/trust.png\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skills;","import React, { Fragment } from \"react\";\r\nimport MainBody from \"./components/MainBody\";\r\nimport AboutMe from \"./components/AboutMe\";\r\nimport Project from \"./components/Project\";\r\nimport Footer from \"./components/Footer\";\r\nimport Skills from \"./components/Skills\";\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <MainBody />\r\n    <AboutMe />\r\n    <Project />\r\n    <Skills />\r\n    <Footer />\r\n  </Fragment>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}